package extern.nifti.alignstacks.align3tp;/** * This class defines an n dimensional polynomial function. * a[j][i] are coefficients of an n-dimensional polynomial *   j is the dimension, 0 to n-1 *   i is the power * For type == 0 * No other type is defined. * * @author J. Anthony Parker, MD PhD <J.A.Parker@IEEE.org> * @version 30October2002 */public class Polynomial extends Function {	private int type = 0;	private double[][] a;	public Polynomial(int type, double[][] a) {		this.type = type;		this.a = a;		return;	}	public double eval(double[] xt) {		double term, sum = 0.0;		switch(type) {			case 0:				for(int j=0; j<a.length; j++) {	// dimension					for(int i=0; i<a[j].length; i++) {	// power						term = a[j][i];						for(int k=0; k<i; k++)							term *= xt[j];						sum += term;					}				}				return sum;			default:				return 0.0;		}	}	protected int length() {return a.length;}	public String coefficients() {		String s = "";		for(int j=0; j<a.length; j++) {	// dimension			if(j>0)				s = s+"\n";			for(int i=0; i<a[j].length; i++) {	// power				if(i>0)					s = s+", ";				s = s+new Double(a[j][i]).toString();			}		}		return s+"\n";	}}	// end of Polynomial