package extern.nifti.alignstacks.align3tp;import ij.*;/** * This class quicksorts list. * * @author J. Anthony Parker, MD PhD <J.A.Parker@IEEE.org> * @version 22May2002 */public class QuickSort {	float[] list;	public QuickSort(float[] list) {		this.list = list;		if(list==null) return;		if(list.length==0) return;		sort(0, list.length-1);		return;	}	private void sort(int start, int end) {		if(start>=end) return;	// end recursion		int i = start, j = end, n = end-start;		float test = 0.0f;		for(int k=0; k<1+n/200; k++)			test += list[(int)(start+n*Math.random())];		test /= (1+n/200);		while(i<j) {			if(list[i]<=test) i++;			else if (list[j]>test) j--;			else swap(i,j);		}		sort(start, i-1);		sort(i, end);		return;	}	private void swap(int i, int j) {		float temp = list[i];		list[i] = list[j];		list[j] = temp;		return;	}}